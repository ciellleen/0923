#define A0pin A0
#define SIpin 23
#define CLKpin 22
#define NPIXELS 128

byte Pixel[NPIXELS];
byte Threshold_Data[NPIXELS];
int LineSensor_Data[NPIXELS];
int LineSensor_Data_Adaption[NPIXELS];
int MAX_LineSensor_Data[NPIXELS];
int MIN_LineSensor_Data[NPIXELS];
int flag_line_adapation;

#define FASTADC 1
#define cbi(sfr, bit) (_SFR_BYTE(sfr) &= ~_BV(bit))
#define sbi(sfr, bit) (_SFR_BYTE(sfr) |= _BV(bit))

// 초기 설정 함수
void setup()
{
  // 배열 초기화 및 핀 설정
  for (int i = 0; i < NPIXELS; i++)
  {
    LineSensor_Data[i] = 0;
    LineSensor_Data_Adaption[i] = 0;
    MAX_LineSensor_Data[i] = 1023;
    MIN_LineSensor_Data[i] = 0;
  }

  pinMode(SIpin, OUTPUT);
  pinMode(CLKpin, OUTPUT);
  pinMode(A0pin, INPUT);

  digitalWrite(SIpin, LOW);
  digitalWrite(CLKpin, LOW);

  // ADC 설정
  #if FASTADC
    sbi(ADCSRA, ADPS2);
    cbi(ADCSRA, ADPS1);
    cbi(ADCSRA, ADPS0);
  #endif

  flag_line_adapation = 0;
  Serial.begin(115200);
  Serial.println("TSL1401");
}

// 이진화를 위한 함수
void threshold_line_image(int threshold_value)
{
  // 각 픽셀의 값을 기준으로 이진화
  for (int i = 0; i < NPIXELS; i++)
  {
    if (Pixel[i] >= threshold_value)
    {
      Threshold_Data[i] = 255;
    }
    else
    {
      Threshold_Data[i] = 0;
    }
  }
}

// 센서 데이터 읽기 함수
void read_line_camera(void)
{
  delay(1);
  digitalWrite(CLKpin, LOW);
  digitalWrite(SIpin, HIGH);
  digitalWrite(CLKpin, HIGH);
  digitalWrite(SIpin, LOW);
  delayMicroseconds(1);

  // 각 픽셀의 아날로그 값 읽기
  for (int i = 0; i < NPIXELS; i++)
  {
    Pixel[i] = analogRead(A0pin) / 4;
    digitalWrite(CLKpin, LOW);
    delayMicroseconds(1);
    digitalWrite(CLKpin, HIGH);
  }

  digitalWrite(CLKpin, LOW);
}

// 질량중심 계산 함수
double line_COM(void)
{
  double COM = 0.0;
  double mass_sum = 0;

  // 이진화된 데이터를 바탕으로 질량중심 계산
  for (int i = 0; i < NPIXELS; i++)
  {
    mass_sum += Threshold_Data[i];
    COM += Threshold_Data[i] * i;
  }

  if (mass_sum == 0)
  {
    return -1;
  }

  COM = COM / mass_sum;
  return COM;
}

// 메인 루프
void loop()
{
  double cx = 0;

  // 데이터 읽기 및 처리
  read_line_camera();
  threshold_line_image(50);
  cx = line_COM();

  // 결과 출력
  for (int i = 0; i < NPIXELS; i++)
  {
    Serial.print(Pixel[i]);
    Serial.print(",");
    Serial.print(Threshold_Data[i]);
    Serial.print(",");
    Serial.print(cx);
    Serial.println();
  }

  delay(100);
}
